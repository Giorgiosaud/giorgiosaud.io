---
import { getCollection, type CollectionEntry} from "astro:content";
import { Picture } from "astro:assets";
import Layout from "@layouts/Layout.astro";
import Container from "@components/container.astro";
import Sectionhead from "@components/sectionhead.astro";
import Paginator from "@components/paginator.astro";
import type { GetStaticPaths, Page } from 'astro';

export const getStaticPaths:GetStaticPaths=async({paginate}) =>{
    const publishedNotesEntries = await getCollection("notes", ({ data }) => {
        return !data.draft && data.publishDate < new Date();
    });
    publishedNotesEntries.sort(function (a, b) {
        return b.data.publishDate.valueOf() - a.data.publishDate.valueOf();
    });
    publishedNotesEntries.map((entry, index) => {
        const newEntry={...entry};
        newEntry.data.readingTime = `${Math.ceil(entry.body.split(" ").length / 200)} min read`;
        return newEntry;
    });
    return paginate(publishedNotesEntries, {pageSize:4});
}
type Props = {
  page: Page<CollectionEntry<'notes'>>;
};
const { page } = Astro.props;
---
<Layout title="Blog">
    <Container>
        <Sectionhead>
            <Fragment slot="title">My Notebook</Fragment>
            <Fragment slot="desc">
                A notebook links for beginners to experts.
            </Fragment>
        </Sectionhead>
        <main class="mt-16">
            <ul class="grid gap-16 max-w-4xl mx-auto">
                {
                    page.data.map((noteEntry, index) => (
                    <li>
                        <a href={`/notebook/${noteEntry.slug}`}>
                            <div class="grid md:grid-cols-2 gap-5 md:gap-10 items-center">
                                <Picture
                                transition:name=`${noteEntry.id}-image`
                                src={noteEntry.data.image.src}
                                alt={noteEntry.data.image.alt}
                                sizes="(max-width: 800px) 100vw, 800px"
                                width={800}
                                height={600}
                                loading={index <= 2 ? "eager" : "lazy"}
                                decoding={index <= 2 ? "sync" : "async"}
                                class="w-full rounded-md object-cover object-center bg-white"
                                />
                                <div>
                                    <span class="text-blue-400 uppercase tracking-wider text-sm font-medium"
                                    transition:name=`${noteEntry.id} category`
                                    >
                                    {noteEntry.data.category}
                                </span>
                                
                                <h2 class="text-3xl font-semibold leading-snug tracking-tight mt-1 "
                                transition:name=`${noteEntry.id} title`
                                >
                                {noteEntry.data.title}
                            </h2>
                            
                            <div class="flex gap-2 mt-3"
                            transition:name=`${noteEntry.id} meta`>
                            <span class="text-gray-400">
                                {noteEntry.data.author}
                            </span>
                            <span class="text-gray-400">• </span>
                            <time
                            class="text-gray-400"
                            datetime={noteEntry.data.publishDate.toISOString()}>
                            {noteEntry.data.publishDate.toDateString()}
                        </time>
                        <span class="text-gray-400">• </span>
                        <span class="text-gray-400">{noteEntry.data.readingTime} </span>

                    </div>
                    <p class="text-slate-500">
                        {noteEntry.data.snippet}
                    </p>
                    
                </div>
            </div>
        </a>
    </li>
    ))
}
</ul>
<Paginator page={page}></Paginator>
</main>
</Container>
</Layout>
