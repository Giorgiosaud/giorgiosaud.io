---
import { getCollection } from "astro:content";
import Layout from "@layouts/Layout.astro";
import Container from "@components/container.astro";

// Generate a new path for every collection entry
export async function getStaticPaths() {
  const notebookEntries = await getCollection("notes");
  return notebookEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

// Get the entry directly from the prop on render
const { entry } = Astro.props;
const { Content } = await entry.render();
const article={
  publishedTime: entry.data.publishDate.toISOString(),
  authors: ["Giorgiosaud"],
  section: entry.data.category,
  tags: entry.data.tags,
}
---

<Layout title={entry.data.title} description={entry.data.snippet} image={entry.data.image.src} article={article}>
  <Container>
    <div class="mx-auto max-w-3xl mt-14">
      <header>
        <span 
          class="text-blue-400 uppercase tracking-wider text-sm font-medium"
          transition:name=`${entry.id} category`>
            {entry.data.category}
        </span>
        <h1
          class="text-4xl lg:text-5xl font-bold lg:tracking-tight mt-1 lg:leading-tight"
          transition:name=`${entry.id} title`>
            {entry.data.title}
        </h1>
        <div class="flex gap-2 mt-3 items-center flex-wrap md:flex-nowrap"
          transition:name=`${entry.id} meta`>
          <span class="text-gray-400">{entry.data.author}</span>
          <span class="text-gray-400">•</span>
          <time
            class="text-gray-400"
            datetime={entry.data.publishDate.toISOString()}>
              {entry.data.publishDate.toDateString()}
          </time>
          <span class="text-gray-400 hidden md:block">•</span>
          <div class="w-full md:w-auto flex flex-wrap gap-3">
            {
              entry.data.tags.map((tag) => (
              <span class="text-sm text-gray-500">#{tag}</span>
              ))
            }
          </div>
        </div>
        <figure class="mx-auto max-w-3xl">
          <img
            class="w-full h-96 object-cover mt-8 rounded-lg"
            src={entry.data.image.src}
            alt={entry.data.image.alt}
            transition:name=`${entry.id}-image`/>
          <figcaption class="text-gray-400 text-xs text-center w-100 pt-2">{entry.data.image.alt}
          </figcaption>
        </figure>
        <details>
          <summary>Summary</summary>
          <p class="text-sm text-gray-400">{entry.data.snippet}</p>
        </details>
      </header>
    </div>
    <div class="mx-auto prose prose-lg mt-6 max-w-3xl">
      <Content />
    </div>
    <blockquote class="md:hidden text-xs mx-auto prose prose-lg mt-6 max-w-3xl">
      I`m a developer that loves to share knowledge
    </blockquote>
    <button class="md:hidden bg-100 px-5 py-3 rounded-md hover:bg-gray-200 transition" id="share" data-description={entry.data.title}>share</button>
    <script>
      const shareData = {
        text:'',
        title:'',
        url: window.location.href,
      };
      const btn = document.getElementById("share");
      // Share must be triggered by "user activation"
      btn!.addEventListener("click", async () => {
        shareData.text = btn!.dataset.description??"";
        shareData.title = btn!.dataset.description??"";
        await navigator.share(shareData);
      });
    </script>
    <div class="text-center mt-8">
      <a
        href="/notebook"
        class="bg-gray-100 px-5 py-3 rounded-md hover:bg-gray-200 transition">
        ← Back to Notebook Index
      </a>
    </div>
  </Container>
</Layout>