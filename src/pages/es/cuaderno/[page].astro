
---
import { getCollection, getEntries, getEntry, getEntryBySlug, type CollectionEntry} from "astro:content";
import { Picture } from "astro:assets";
import Layout from "@layouts/Layout.astro";
import Container from "@components/container.astro";
import Sectionhead from "@components/sectionhead.astro";
import Paginator from "@components/paginator.astro";
import type { GetStaticPaths, Page } from 'astro';
import CloudinaryImage from "@components/ui/cloudinaryImage.astro";
import { getUniqueObjectsByKey } from "@utils/getUniqueObjectsByKey";
import Note from "../../../components/note.astro";

export const getStaticPaths:GetStaticPaths=async({paginate}) =>{
    const publishedNotasEntries = await getCollection("notas", ({ data }) => {
        return !data.draft && data.publishDate < new Date();
    });
    publishedNotasEntries.sort(function (a, b) {
        return b.data.publishDate.valueOf() - a.data.publishDate.valueOf();
    });
 
    return paginate(publishedNotasEntries, {pageSize:4});
}
type Props = {
  page: Page<CollectionEntry<'notas'>>;
};
const { page } = Astro.props as Props;

const authors = getUniqueObjectsByKey(page.data.map((entry) => {
    return entry.data.author;
}),"slug");

const authorsData=await getEntries(authors);

let canonical
if (page.currentPage===1){
    canonical=`/es/cuaderno/`;
}
---
<Layout title="Blog" canonical={canonical}>
    <Container>
        <Sectionhead>
            <Fragment slot="title">Mi Cuaderno</Fragment>
            <Fragment slot="desc">
                Un cuaderno para principiantes y expertos.
            </Fragment>
        </Sectionhead>
        <main class="mt-16">
            <ul class="grid gap-16 max-w-4xl mx-auto">
                {
                    page.data.map((noteEntry, index) => (
                    <li>
                        <Note 
                        link={`/es/cuaderno/${noteEntry.slug}`}
                        imageSrc={noteEntry.data.image.src} 
                        imageAlt={noteEntry.data.image.alt}
                        category={noteEntry.data.category}
                        title={noteEntry.data.title}
                        authorAlias={authorsData.find((author)=>author.slug===noteEntry.data.author.slug)?.data.alias}
                        publishDate={noteEntry.data.publishDate}
                        resume={noteEntry.data.resume}
                        slug={noteEntry.slug}
                        index={index}
                        authorLink={`/es/equipo/${noteEntry.data.author.slug}`}
                        hideTags={false}
                        tagsBase="/es/cuaderno/tag/"
                        tags={noteEntry.data.tags}
                        localization={{
                            lang:"es-ES",
                            options:{
                                month:'long',
                                day:'numeric',
                                year:'numeric'
                            }
                        }}
                        />
    </li>
    ))
}
</ul>
<Paginator page={page}></Paginator>
</main>
</Container>
</Layout>
