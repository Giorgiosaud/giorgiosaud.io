---
import Layout from "@layouts/Layout.astro";
import Container from "@components/container.astro";
import Sectionhead from "@components/sectionhead.astro";
import Note from "@components/note.astro";
import { getUniqueObjectsByKey } from "@utils/getUniqueObjectsByKey";

import {getCollection,getEntries} from 'astro:content';
import { getLangFromUrl, useTranslatedPath } from "@i18n/utils";
export async function getStaticPaths() {
  const publishedNotes = await getCollection("notas", ({ data }) => {
        return !data.draft && data.publishDate < new Date();
    });
    const uniqueTags = [...new Set(publishedNotes.map(note=>note.data.tags).flat())];
    return uniqueTags.map(tag=>({
    params:{
      tag,
    }
  }))
}

const { tag } = Astro.params;
const entries = await getCollection("notas", ({ data }) => {
    return !data.draft && data.publishDate < new Date() && data.tags.includes(tag);
});
const authors = getUniqueObjectsByKey(entries.map((entry) => {
    return entry.data.author;
}),"slug");
const authorsData=await getEntries(authors);
const langToTranslate = getLangFromUrl(Astro.url)==="en"?"es":"en";
const {translatePath} = useTranslatedPath(langToTranslate);
const translateActualPath=translatePath('notebook',langToTranslate);
---
<Layout title={`Anotacion en cuaderno por #${tag}`} translateActualPath={translateActualPath}>
  <Container>
      <Sectionhead>
          <Fragment slot="title">My tag #{tag}</Fragment>
      </Sectionhead>
      <main class="mt-16">
          <ul class="grid gap-16 max-w-4xl mx-auto">
              {
                  entries.map((noteEntry, index) => (
                      <Note 
                      link={`/es/cuaderno/${noteEntry.id}`}
                      imageSrc={noteEntry.data.image.src} 
                      imageAlt={noteEntry.data.image.alt}
                      category={noteEntry.data.category}
                      title={noteEntry.data.title}
                      authorAlias={authorsData.find((author)=>author.slug===noteEntry.data.author.slug)?.data.alias}
                      publishDate={noteEntry.data.publishDate}
                      resume={noteEntry.data.resume}
                      slug={noteEntry.id}
                      tags={noteEntry.data.tags}
                      hideTags={true}
                      index={index}
                      authorLink={`/es/equipo/${noteEntry.data.author.slug}`}
                      localization={{
                          lang:"es-ES",
                          options:{
                              month:'long',
                              day:'numeric',
                              year:'numeric'
                          }
                      }}
                      tagsBase="/es/cuaderno/tag/"
                      />
  ))
}
</ul>
</main>
</Container>
</Layout>
