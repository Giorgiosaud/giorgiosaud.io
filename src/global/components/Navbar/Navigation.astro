---
import { useTranslations, useTranslatedPath, getLangFromUrl } from "@i18n/utils";
import type { MenuItemsInterface } from "./MenuItemsInterface";
const lang = getLangFromUrl(Astro.url);

const t = useTranslations(lang);
const { translatePath } = useTranslatedPath(lang);
const menuItems:MenuItemsInterface[] =[
{
  title: t("nav.about-this"),
  path: translatePath("about-this", lang),
},
{
  title: t("nav.about-me"),
  path: translatePath("about-me", lang),
},
{
  title: t("nav.acknowledgements"),
  path: translatePath("acknowledgements", lang),
},
{
  title: t("nav.title"),
  path: translatePath("notebook", lang),
},
{
  title: t("nav.contact"),
  path: translatePath("contact", lang),
},
];;
---

<div id="menu">
  <ul>
    {
      menuItems.map((menuEl) => (
      <li
      class:list={[
        { active: menuEl.path == Astro.url.pathname && menuEl.path != "/" },
        ]}
        >
        <a
        href={menuEl.path}
        role="menuitem"
        >
        {menuEl.title}
      </a>
    </li>
    ))
  }
</ul>
</div>
<style>
  #menu{
    grid-column: menu / actions;
    inset:0;
    display: grid;
    place-items: center;
    opacity: 0;
    height: 0dvh;

    transition: all 0.600ms ease-in-out;
    &[data-opened="true"]{
      opacity: 1;
      height: 100dvh;
      gap: 2rem;

      a{
        font-size:clamp(1.5rem, 2vw, 2rem);
      }
    }
    @media screen and (width >= 48rem) {
      position: static;
      width: auto;
      height: auto;
      background-color: transparent;
      opacity: 1;
    }
    ul{
      overflow: hidden;
      list-style: none;
      padding: 0;
      grid-auto-flow: column;
      gap: 1rem;
      display: grid;
      grid-auto-flow: row;
      @media screen and (width >= 48rem) {
        grid-auto-flow: column;

      }
      li{
        text-wrap-mode: nowrap;
        text-shadow: 1px 1px 5px light-dark(var(--color-light), var(--color-dark));
      }
    }

    &[data-opened="true"]{
      
      @media screen and (width < 48rem) {
      }
    }
  
  }
</style>