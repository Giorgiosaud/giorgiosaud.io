---
import Container from "@components/container.astro";
import Dropdown from "./dropdown.astro";
import { Astronav, MenuItems, MenuIcon } from "astro-navbar";
import {
  getLangFromUrl,
  useTranslatedPath,
  useTranslations,
} from "@i18n/utils";
const lang = getLangFromUrl(Astro.url);
const otherLang=lang==='es'?'en':'es';
const t = useTranslations(lang);
const {translatePath} = useTranslatedPath(lang);
import type { MenuItemsInterface } from "@components/definitions/MenuItemsInterface";
interface Props{
  translateActualPath?:string
}
const {translateActualPath} = Astro.props
const menuItems: MenuItemsInterface[] = [
  {
    title: t("nav.about"),
    badge: true,
    path: translatePath("about", lang),
  },
  {
    title: t("nav.title"),
    path: translatePath("/notebook", lang),
  },
  {
    title: t("nav.contact"),
    path: translatePath("/contact", lang),
  },
  
  ];
  if(lang==='es'){
    menuItems.push({
      title: "English",
      path: translateActualPath?translateActualPath:"/",
  });
    
  }else{
    menuItems.push({
      title: "Espa√±ol",
      path: translateActualPath?translateActualPath:"/es",
  });
  }

---

<div class="sticky top-0 z-50 bg-slate-100 py-5 opacity-85">
  <Container>
    <header class="flex flex-col lg:flex-row justify-between items-center">
      <Astronav>
        <div class="flex w-full lg:w-auto items-center justify-between">
          <a href={translatePath("/", lang)} class="text-lg"
            ><span class="font-bold text-slate-800">Giorgiosaud</span><span
              class="text-slate-500">.io</span
            >
          </a>
          <div class="block lg:hidden">
            <MenuIcon class="w-4 h-4 text-gray-800" />
          </div>
        </div>
        <MenuItems class="hidden w-full lg:w-auto mt-2 lg:flex lg:mt-0">
          <ul class="flex flex-col lg:flex-row lg:gap-3">
            {
              menuItems.map((item, index) => (
                <>
                  {item.children && (
                    <Dropdown
                      title={item.title}
                      children={item.children}
                      lastItem={index === menuItems.length - 1}
                    />
                  )}

                {!item.children && (
                  <li>
                    <a
                      href={item.path}
                      class="flex lg:px-3 py-2 items-center text-gray-600 hover:text-gray-900">
                      <span> {item.title}</span>
                      {item.badge && (
                        <span class="ml-1 px-2 py-0.5 text-[10px] animate-pulse font-semibold uppercase text-white bg-indigo-600 rounded-full">
                          New
                        </span>
                      )}
                    </a>
                  </li>
                )}
              </>
            ))
          }
        </ul>

      </MenuItems>
    </Astronav>
  </header>
</Container>
</div>
