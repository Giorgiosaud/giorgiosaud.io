const id = "self-healing-url-in-astro.md";
						const collection = "notes";
						const slug = "self-healing-url-in-astro";
						const body = "\nFirst start to define what a self-healing URL is, a self-healing URL is like [medium. com](https://giorgiosaud.medium.com) posts a URL that has a unique identifier to allow redirect to a beauty URL path the structure of the URL normally is `https://giorgiosaud.medium.com/arquitectura-de-micro-frontend-trabaja-inteligentemente-no-m%C3%A1s-duro-8995417d821a` this structure is the ${baseUrl}/${post-name}-${id} this is the one which allows us to detect a malformed URL, if this is in the name will be replaced with the original one for example `https://giorgiosaud.medium.com/anything-8995417d821a` will redirect you to the self-healed original URL,\n\nIn other frameworks, it is easy to find information about it but in Astro, I can't find any doc related to it I made my implementation in which I use a self-healing ID in the content post, manually generated and I will add this ID to all my shareable links, and I made the implementation o a new [redirect] page inside /notebook path in pages folder:\n\n```astro\n---\nimport Container from \"@components/container.astro\";\nimport Layout from \"@layouts/Layout.astro\";\nimport { getCollection } from \"astro:content\";\nexport const prerender = false;\nlet path = Astro.url.pathname;\nif (path.includes(\"/notebook/\")) {\n  console.log(\"inside if path::\");\n\n  const hashToHeal = path.match(/\\/notebook\\/.*?(\\d{6})/)?.[1];\n  if (hashToHeal) {\n    console.log(\"inside if hash:::\", hashToHeal);\n\n    const col = await getCollection(\"notes\", (entry) => {\n      return entry.data.selfHealing === hashToHeal;\n    });\n    console.log(\"col searched::\", col);\n\n    if (col.length) {\n      const redirect = \"/notebook/\" + col[0].slug;\n      console.log(\"redirect::\", redirect);\n\n      return Astro.redirect(redirect);\n    }\n  }\n  console.log(\"outside if hash:::\", hashToHeal);\n\n  return Astro.redirect(\"/404\");\n}\n---\n```\n\nBefore rendering my 404 page I will try to detect the self-healing ID and redirect to the collection available with this ID then in my normal URL I don't need to apply this but in the shareable link, I will include it because in other pages is common that the link is bad referenced.\n\nFor use this functionality we must me in hybrid mode.\n\n> Thanks to [Tim Neubauer](https://timneubauer.dev/blog/copy-code-button-in-astro/) for the copy code button i use it only touching the css, and a little copilot refactor but it was great.\n";
						const data = {draft:false,title:"Self-healing URL in Astro",resume:"In this post, I will talk about how to develop a functionality of self-healing URL in Astro project with a simple approach ",selfHealing:"000014",image:{src:"selfhealing_url_lygv2g",alt:"Self Healing paint"},publishDate:new Date(1721403540000),author:{slug:"jorge-saud",collection:"team"},category:"architecture",tags:["architecture","functionalfeatures"]};
						const _internal = {
							type: 'content',
							filePath: "/Users/giorgiosaud/Projects/personal/giorgiosaud.io/src/content/notes/self-healing-url-in-astro.md",
							rawData: undefined,
						};

export { _internal, body, collection, data, id, slug };
