import { a as createComponent, r as renderTemplate, m as maybeRenderHead, u as unescapeHTML } from './astro/server_ICIjUNoW.mjs';

const html = "<p>First start to define what a self-healing URL is, a self-healing URL is like <a href=\"https://giorgiosaud.medium.com\">medium. com</a> posts a URL that has a unique identifier to allow redirect to a beauty URL path the structure of the URL normally is <code>https://giorgiosaud.medium.com/arquitectura-de-micro-frontend-trabaja-inteligentemente-no-m%C3%A1s-duro-8995417d821a</code> this structure is the ${baseUrl}/${post-name}-${id} this is the one which allows us to detect a malformed URL, if this is in the name will be replaced with the original one for example <code>https://giorgiosaud.medium.com/anything-8995417d821a</code> will redirect you to the self-healed original URL,</p>\n<p>In other frameworks, it is easy to find information about it but in Astro, I canâ€™t find any doc related to it I made my implementation in which I use a self-healing ID in the content post, manually generated and I will add this ID to all my shareable links, and I made the implementation o a new [redirect] page inside /notebook path in pages folder:</p>\n<pre class=\"astro-code vitesse-dark\" style=\"background-color:#121212;color:#dbd7caee; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"astro\"><code><span class=\"line\"><span style=\"color:#758575DD\">---</span></span>\n<span class=\"line\"><span style=\"color:#4D9375\">import</span><span style=\"color:#BD976A\"> Container</span><span style=\"color:#4D9375\"> from</span><span style=\"color:#C98A7D77\"> \"</span><span style=\"color:#C98A7D\">@components/container.astro</span><span style=\"color:#C98A7D77\">\"</span><span style=\"color:#666666\">;</span></span>\n<span class=\"line\"><span style=\"color:#4D9375\">import</span><span style=\"color:#BD976A\"> Layout</span><span style=\"color:#4D9375\"> from</span><span style=\"color:#C98A7D77\"> \"</span><span style=\"color:#C98A7D\">@layouts/Layout.astro</span><span style=\"color:#C98A7D77\">\"</span><span style=\"color:#666666\">;</span></span>\n<span class=\"line\"><span style=\"color:#4D9375\">import</span><span style=\"color:#666666\"> {</span><span style=\"color:#BD976A\"> getCollection</span><span style=\"color:#666666\"> }</span><span style=\"color:#4D9375\"> from</span><span style=\"color:#C98A7D77\"> \"</span><span style=\"color:#C98A7D\">astro:content</span><span style=\"color:#C98A7D77\">\"</span><span style=\"color:#666666\">;</span></span>\n<span class=\"line\"><span style=\"color:#4D9375\">export</span><span style=\"color:#CB7676\"> const </span><span style=\"color:#BD976A\">prerender</span><span style=\"color:#666666\"> =</span><span style=\"color:#4D9375\"> false</span><span style=\"color:#666666\">;</span></span>\n<span class=\"line\"><span style=\"color:#CB7676\">let </span><span style=\"color:#BD976A\">path</span><span style=\"color:#666666\"> =</span><span style=\"color:#BD976A\"> Astro</span><span style=\"color:#666666\">.</span><span style=\"color:#BD976A\">url</span><span style=\"color:#666666\">.</span><span style=\"color:#BD976A\">pathname</span><span style=\"color:#666666\">;</span></span>\n<span class=\"line\"><span style=\"color:#4D9375\">if</span><span style=\"color:#666666\"> (</span><span style=\"color:#BD976A\">path</span><span style=\"color:#666666\">.</span><span style=\"color:#80A665\">includes</span><span style=\"color:#666666\">(</span><span style=\"color:#C98A7D77\">\"</span><span style=\"color:#C98A7D\">/notebook/</span><span style=\"color:#C98A7D77\">\"</span><span style=\"color:#666666\">))</span><span style=\"color:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"color:#BD976A\">  console</span><span style=\"color:#666666\">.</span><span style=\"color:#80A665\">log</span><span style=\"color:#666666\">(</span><span style=\"color:#C98A7D77\">\"</span><span style=\"color:#C98A7D\">inside if path::</span><span style=\"color:#C98A7D77\">\"</span><span style=\"color:#666666\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#CB7676\">  const </span><span style=\"color:#BD976A\">hashToHeal</span><span style=\"color:#666666\"> =</span><span style=\"color:#BD976A\"> path</span><span style=\"color:#666666\">.</span><span style=\"color:#80A665\">match</span><span style=\"color:#666666\">(</span><span style=\"color:#C98A7D77\">/</span><span style=\"color:#E6CC77\">\\/</span><span style=\"color:#C4704F\">notebook</span><span style=\"color:#E6CC77\">\\/</span><span style=\"color:#6872AB\">.</span><span style=\"color:#4C9A91\">*?</span><span style=\"color:#666666\">(</span><span style=\"color:#6872AB\">\\d</span><span style=\"color:#4C9A91\">{6}</span><span style=\"color:#666666\">)</span><span style=\"color:#C98A7D77\">/</span><span style=\"color:#666666\">)?.[</span><span style=\"color:#4C9A91\">1</span><span style=\"color:#666666\">];</span></span>\n<span class=\"line\"><span style=\"color:#4D9375\">  if</span><span style=\"color:#666666\"> (</span><span style=\"color:#BD976A\">hashToHeal</span><span style=\"color:#666666\">)</span><span style=\"color:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"color:#BD976A\">    console</span><span style=\"color:#666666\">.</span><span style=\"color:#80A665\">log</span><span style=\"color:#666666\">(</span><span style=\"color:#C98A7D77\">\"</span><span style=\"color:#C98A7D\">inside if hash:::</span><span style=\"color:#C98A7D77\">\"</span><span style=\"color:#666666\">,</span><span style=\"color:#BD976A\"> hashToHeal</span><span style=\"color:#666666\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#CB7676\">    const </span><span style=\"color:#BD976A\">col</span><span style=\"color:#666666\"> =</span><span style=\"color:#4D9375\"> await</span><span style=\"color:#80A665\"> getCollection</span><span style=\"color:#666666\">(</span><span style=\"color:#C98A7D77\">\"</span><span style=\"color:#C98A7D\">notes</span><span style=\"color:#C98A7D77\">\"</span><span style=\"color:#666666\">,</span><span style=\"color:#666666\"> (</span><span style=\"color:#BD976A\">entry</span><span style=\"color:#666666\">)</span><span style=\"color:#666666\"> =></span><span style=\"color:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"color:#4D9375\">      return</span><span style=\"color:#BD976A\"> entry</span><span style=\"color:#666666\">.</span><span style=\"color:#BD976A\">data</span><span style=\"color:#666666\">.</span><span style=\"color:#BD976A\">selfHealing</span><span style=\"color:#CB7676\"> === </span><span style=\"color:#BD976A\">hashToHeal</span><span style=\"color:#666666\">;</span></span>\n<span class=\"line\"><span style=\"color:#666666\">    });</span></span>\n<span class=\"line\"><span style=\"color:#BD976A\">    console</span><span style=\"color:#666666\">.</span><span style=\"color:#80A665\">log</span><span style=\"color:#666666\">(</span><span style=\"color:#C98A7D77\">\"</span><span style=\"color:#C98A7D\">col searched::</span><span style=\"color:#C98A7D77\">\"</span><span style=\"color:#666666\">,</span><span style=\"color:#BD976A\"> col</span><span style=\"color:#666666\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#4D9375\">    if</span><span style=\"color:#666666\"> (</span><span style=\"color:#BD976A\">col</span><span style=\"color:#666666\">.</span><span style=\"color:#B8A965\">length</span><span style=\"color:#666666\">)</span><span style=\"color:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"color:#CB7676\">      const </span><span style=\"color:#BD976A\">redirect</span><span style=\"color:#666666\"> =</span><span style=\"color:#C98A7D77\"> \"</span><span style=\"color:#C98A7D\">/notebook/</span><span style=\"color:#C98A7D77\">\"</span><span style=\"color:#CB7676\"> + </span><span style=\"color:#BD976A\">col</span><span style=\"color:#666666\">[</span><span style=\"color:#4C9A91\">0</span><span style=\"color:#666666\">].</span><span style=\"color:#BD976A\">slug</span><span style=\"color:#666666\">;</span></span>\n<span class=\"line\"><span style=\"color:#BD976A\">      console</span><span style=\"color:#666666\">.</span><span style=\"color:#80A665\">log</span><span style=\"color:#666666\">(</span><span style=\"color:#C98A7D77\">\"</span><span style=\"color:#C98A7D\">redirect::</span><span style=\"color:#C98A7D77\">\"</span><span style=\"color:#666666\">,</span><span style=\"color:#BD976A\"> redirect</span><span style=\"color:#666666\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#4D9375\">      return</span><span style=\"color:#BD976A\"> Astro</span><span style=\"color:#666666\">.</span><span style=\"color:#80A665\">redirect</span><span style=\"color:#666666\">(</span><span style=\"color:#BD976A\">redirect</span><span style=\"color:#666666\">);</span></span>\n<span class=\"line\"><span style=\"color:#666666\">    }</span></span>\n<span class=\"line\"><span style=\"color:#666666\">  }</span></span>\n<span class=\"line\"><span style=\"color:#BD976A\">  console</span><span style=\"color:#666666\">.</span><span style=\"color:#80A665\">log</span><span style=\"color:#666666\">(</span><span style=\"color:#C98A7D77\">\"</span><span style=\"color:#C98A7D\">outside if hash:::</span><span style=\"color:#C98A7D77\">\"</span><span style=\"color:#666666\">,</span><span style=\"color:#BD976A\"> hashToHeal</span><span style=\"color:#666666\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#4D9375\">  return</span><span style=\"color:#BD976A\"> Astro</span><span style=\"color:#666666\">.</span><span style=\"color:#80A665\">redirect</span><span style=\"color:#666666\">(</span><span style=\"color:#C98A7D77\">\"</span><span style=\"color:#C98A7D\">/404</span><span style=\"color:#C98A7D77\">\"</span><span style=\"color:#666666\">);</span></span>\n<span class=\"line\"><span style=\"color:#666666\">}</span></span>\n<span class=\"line\"><span style=\"color:#758575DD\">---</span></span>\n<span class=\"line\"></span></code></pre>\n<p>Before rendering my 404 page I will try to detect the self-healing ID and redirect to the collection available with this ID then in my normal URL I donâ€™t need to apply this but in the shareable link, I will include it because in other pages is common that the link is bad referenced.</p>\n<p>For use this functionality we must me in hybrid mode.</p>\n<blockquote>\n<p>Thanks to <a href=\"https://timneubauer.dev/blog/copy-code-button-in-astro/\">Tim Neubauer</a> for the copy code button i use it only touching the css, and a little copilot refactor but it was great.</p>\n</blockquote>";

				const frontmatter = {"draft":false,"selfHealing":"000014","title":"Self-healing URL in Astro","resume":"In this post, I will talk about how to develop a functionality of self-healing URL in Astro project with a simple approach ","image":{"src":"selfhealing_url_lygv2g","alt":"Self Healing paint"},"publishDate":"2024-07-19 11:39","category":"architecture","author":"jorge-saud","tags":["architecture","functionalfeatures"]};
				const file = "/Users/giorgiosaud/Projects/personal/giorgiosaud.io/src/content/notes/self-healing-url-in-astro.md";
				const url = undefined;
				function rawContent() {
					return "\nFirst start to define what a self-healing URL is, a self-healing URL is like [medium. com](https://giorgiosaud.medium.com) posts a URL that has a unique identifier to allow redirect to a beauty URL path the structure of the URL normally is `https://giorgiosaud.medium.com/arquitectura-de-micro-frontend-trabaja-inteligentemente-no-m%C3%A1s-duro-8995417d821a` this structure is the ${baseUrl}/${post-name}-${id} this is the one which allows us to detect a malformed URL, if this is in the name will be replaced with the original one for example `https://giorgiosaud.medium.com/anything-8995417d821a` will redirect you to the self-healed original URL,\n\nIn other frameworks, it is easy to find information about it but in Astro, I can't find any doc related to it I made my implementation in which I use a self-healing ID in the content post, manually generated and I will add this ID to all my shareable links, and I made the implementation o a new [redirect] page inside /notebook path in pages folder:\n\n```astro\n---\nimport Container from \"@components/container.astro\";\nimport Layout from \"@layouts/Layout.astro\";\nimport { getCollection } from \"astro:content\";\nexport const prerender = false;\nlet path = Astro.url.pathname;\nif (path.includes(\"/notebook/\")) {\n  console.log(\"inside if path::\");\n\n  const hashToHeal = path.match(/\\/notebook\\/.*?(\\d{6})/)?.[1];\n  if (hashToHeal) {\n    console.log(\"inside if hash:::\", hashToHeal);\n\n    const col = await getCollection(\"notes\", (entry) => {\n      return entry.data.selfHealing === hashToHeal;\n    });\n    console.log(\"col searched::\", col);\n\n    if (col.length) {\n      const redirect = \"/notebook/\" + col[0].slug;\n      console.log(\"redirect::\", redirect);\n\n      return Astro.redirect(redirect);\n    }\n  }\n  console.log(\"outside if hash:::\", hashToHeal);\n\n  return Astro.redirect(\"/404\");\n}\n---\n```\n\nBefore rendering my 404 page I will try to detect the self-healing ID and redirect to the collection available with this ID then in my normal URL I don't need to apply this but in the shareable link, I will include it because in other pages is common that the link is bad referenced.\n\nFor use this functionality we must me in hybrid mode.\n\n> Thanks to [Tim Neubauer](https://timneubauer.dev/blog/copy-code-button-in-astro/) for the copy code button i use it only touching the css, and a little copilot refactor but it was great.\n";
				}
				function compiledContent() {
					return html;
				}
				function getHeadings() {
					return [];
				}

				const Content = createComponent((result, _props, slots) => {
					const { layout, ...content } = frontmatter;
					content.file = file;
					content.url = url;

					return renderTemplate`${maybeRenderHead()}${unescapeHTML(html)}`;
				});

export { Content, compiledContent, Content as default, file, frontmatter, getHeadings, rawContent, url };
