import { a as createComponent, r as renderTemplate, m as maybeRenderHead, u as unescapeHTML } from './astro/server_ICIjUNoW.mjs';

const html = "<h1 id=\"basis-of-pagination\">Basis of Pagination</h1>\n<p>Astro like many other frameworks has a pagination system based on repeatable content, this content should belong to a single repository, Astro has collections, the collections are files written in .md and stored in the filesystem that can be processed internally by Astro, this allows to use in the build process some techniques to generate in 3 ways the website, we can configure the output as <strong>static</strong> where the build will generate all the static paths <strong>server</strong> where the build process will generate a server which processes all request supporting SSR (server-side rendering) or <strong>hybrid</strong> where some elements are statics and other are SSR ones.</p>\n<pre class=\"astro-code vitesse-dark\" style=\"background-color:#121212;color:#dbd7caee; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"bash\"><code><span class=\"line\"><span style=\"color:#80A665\">src/</span></span>\n<span class=\"line\"><span style=\"color:#80A665\">  ├──</span><span style=\"color:#C98A7D\"> content/</span></span>\n<span class=\"line\"><span style=\"color:#80A665\">  │</span><span style=\"color:#C98A7D\">   ├──</span><span style=\"color:#C98A7D\"> blog/</span></span>\n<span class=\"line\"><span style=\"color:#80A665\">  │</span><span style=\"color:#C98A7D\">   │</span><span style=\"color:#C98A7D\">   └──</span><span style=\"color:#C98A7D\"> blognote-1.md</span></span>\n<span class=\"line\"><span style=\"color:#80A665\">  │</span><span style=\"color:#C98A7D\">   │</span><span style=\"color:#C98A7D\">   └──</span><span style=\"color:#C98A7D\"> blognote-2.md</span></span>\n<span class=\"line\"><span style=\"color:#80A665\">  │</span><span style=\"color:#C98A7D\">   └──</span><span style=\"color:#C98A7D\"> config.ts</span></span>\n<span class=\"line\"><span style=\"color:#B8A965\">  .</span></span>\n<span class=\"line\"><span style=\"color:#B8A965\">  .</span></span>\n<span class=\"line\"><span style=\"color:#B8A965\">  .</span></span>\n<span class=\"line\"><span style=\"color:#80A665\">  ├──</span><span style=\"color:#C98A7D\"> layouts/</span></span>\n<span class=\"line\"><span style=\"color:#80A665\">  │</span><span style=\"color:#C98A7D\">   └──</span><span style=\"color:#C98A7D\"> Layout.astro</span></span>\n<span class=\"line\"><span style=\"color:#80A665\">  ├──</span><span style=\"color:#C98A7D\"> pages/</span></span>\n<span class=\"line\"><span style=\"color:#80A665\">  │</span><span style=\"color:#C98A7D\">   └──</span><span style=\"color:#C98A7D\"> blog/</span></span>\n<span class=\"line\"><span style=\"color:#80A665\">  │</span><span style=\"color:#C98A7D\">       └──</span><span style=\"color:#DBD7CAEE\"> [slug].astro</span></span>\n<span class=\"line\"><span style=\"color:#80A665\">  │</span><span style=\"color:#C98A7D\">   └──</span><span style=\"color:#C98A7D\"> index.astro</span></span>\n<span class=\"line\"><span style=\"color:#80A665\">  │</span><span style=\"color:#C98A7D\">   └──</span><span style=\"color:#C98A7D\"> blog.astro</span></span>\n<span class=\"line\"><span style=\"color:#B8A965\">  .</span></span>\n<span class=\"line\"><span style=\"color:#B8A965\">  .</span></span>\n<span class=\"line\"><span style=\"color:#B8A965\">  .</span></span>\n<span class=\"line\"></span></code></pre>\n<p>In this structure, the blog can show the 2 blog notes of the content but when the blog grows not only the build process will take more time but the /blog path also renders more content than a normal page increasing the loading time of the final rendered site, then we think about pagination, we can add a paginator in the blog, but pagination in this page is almost impossible because this page is rendered with the <code>getCollection</code> function but for pagination purposes we need to use the <code>getStaticPaths</code> method, this is because this method is the one that generates dynamic routes to match the brackets syntax in the routing, then we need to separate this index page in 2 pages one that should be shown in the /blog and another that takes care of pages, and move the blog.astro to the blog file structure to allow us to manage all related blog issues inside of this folder, when we move it we need to rename to index.astro because the folder name is the route that we want.</p>\n<pre class=\"astro-code vitesse-dark\" style=\"background-color:#121212;color:#dbd7caee; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"bash\"><code><span class=\"line\"><span style=\"color:#80A665\">src/</span></span>\n<span class=\"line\"><span style=\"color:#80A665\">  ├──</span><span style=\"color:#C98A7D\"> content/</span></span>\n<span class=\"line\"><span style=\"color:#80A665\">  │</span><span style=\"color:#C98A7D\">   ├──</span><span style=\"color:#C98A7D\"> blog/</span></span>\n<span class=\"line\"><span style=\"color:#80A665\">  │</span><span style=\"color:#C98A7D\">   │</span><span style=\"color:#C98A7D\">   └──</span><span style=\"color:#C98A7D\"> blognote-1.md</span></span>\n<span class=\"line\"><span style=\"color:#80A665\">  │</span><span style=\"color:#C98A7D\">   │</span><span style=\"color:#C98A7D\">   └──</span><span style=\"color:#C98A7D\"> blognote-2.md</span></span>\n<span class=\"line\"><span style=\"color:#80A665\">  │</span><span style=\"color:#C98A7D\">   │</span><span style=\"color:#C98A7D\">   .</span></span>\n<span class=\"line\"><span style=\"color:#80A665\">  │</span><span style=\"color:#C98A7D\">   │</span><span style=\"color:#C98A7D\">   .</span></span>\n<span class=\"line\"><span style=\"color:#80A665\">  │</span><span style=\"color:#C98A7D\">   │</span><span style=\"color:#C98A7D\">   .</span></span>\n<span class=\"line\"><span style=\"color:#80A665\">  │</span><span style=\"color:#C98A7D\">   │</span><span style=\"color:#C98A7D\">   └──</span><span style=\"color:#C98A7D\"> blognote-31.md</span></span>\n<span class=\"line\"><span style=\"color:#80A665\">  │</span><span style=\"color:#C98A7D\">   │</span><span style=\"color:#C98A7D\">   └──</span><span style=\"color:#C98A7D\"> blognote-32.md</span></span>\n<span class=\"line\"><span style=\"color:#80A665\">  │</span><span style=\"color:#C98A7D\">   └──</span><span style=\"color:#C98A7D\"> config.ts</span></span>\n<span class=\"line\"><span style=\"color:#B8A965\">  .</span></span>\n<span class=\"line\"><span style=\"color:#B8A965\">  .</span></span>\n<span class=\"line\"><span style=\"color:#B8A965\">  .</span></span>\n<span class=\"line\"><span style=\"color:#80A665\">  ├──</span><span style=\"color:#C98A7D\"> layouts/</span></span>\n<span class=\"line\"><span style=\"color:#80A665\">  │</span><span style=\"color:#C98A7D\">   └──</span><span style=\"color:#C98A7D\"> Layout.astro</span></span>\n<span class=\"line\"><span style=\"color:#80A665\">  ├──</span><span style=\"color:#C98A7D\"> pages/</span></span>\n<span class=\"line\"><span style=\"color:#80A665\">  │</span><span style=\"color:#C98A7D\">   └──</span><span style=\"color:#C98A7D\"> blog/</span></span>\n<span class=\"line\"><span style=\"color:#80A665\">  │</span><span style=\"color:#C98A7D\">       └──</span><span style=\"color:#DBD7CAEE\"> [slug].astro</span></span>\n<span class=\"line\"><span style=\"color:#80A665\">  │</span><span style=\"color:#C98A7D\">       └──</span><span style=\"color:#DBD7CAEE\"> [page].astro</span></span>\n<span class=\"line\"><span style=\"color:#80A665\">  │</span><span style=\"color:#C98A7D\">       └──</span><span style=\"color:#C98A7D\"> index.astro</span></span>\n<span class=\"line\"><span style=\"color:#80A665\">  │</span><span style=\"color:#C98A7D\">   └──</span><span style=\"color:#C98A7D\"> index.astro</span></span>\n<span class=\"line\"><span style=\"color:#B8A965\">  .</span></span>\n<span class=\"line\"><span style=\"color:#B8A965\">  .</span></span>\n<span class=\"line\"><span style=\"color:#B8A965\">  .</span></span>\n<span class=\"line\"></span></code></pre>\n<p>With this file structure now have all related blog pages in one place, and I choose to use one index and another page that takes care of the paginated ones all but page 1, that`s because if I use the same page for pagination or show the main show to avoid duplication will be /1 now I can handle this and make /1 canonical of /blog and in my index.astro inside the blog folder only shows one arrow to see the previous post that will move to /2 page of / blog like this <code>blog/2</code></p>\n<p>To handle this canonical between <code>blog/1</code>and <code>blog</code> I add a canonical property to my <code>Layout.astro</code> page  and in the head I add to the head this:</p>\n<pre class=\"astro-code vitesse-dark\" style=\"background-color:#121212;color:#dbd7caee; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"astro\"><code><span class=\"line\"><span style=\"color:#666666\">  {</span><span style=\"color:#BD976A\">canonical</span><span style=\"color:#CB7676\">&#x26;&#x26;</span><span style=\"color:#666666\">&#x3C;</span><span style=\"color:#4D9375\">link</span><span style=\"color:#BD976A\"> rel</span><span style=\"color:#666666\">=</span><span style=\"color:#C98A7D77\">\"</span><span style=\"color:#C98A7D\">canonical</span><span style=\"color:#C98A7D77\">\"</span><span style=\"color:#BD976A\"> href</span><span style=\"color:#666666\">={</span><span style=\"color:#BD976A\">canonical</span><span style=\"color:#666666\">}</span><span style=\"color:#666666\"> />}</span></span>\n<span class=\"line\"></span></code></pre>\n<p>then in the frontmatter part i delcared canonical as a Astr.prop and make it optional, then in the [page].astro i used it as.</p>\n<pre class=\"astro-code vitesse-dark\" style=\"background-color:#121212;color:#dbd7caee; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"astro\"><code><span class=\"line\"><span style=\"color:#666666\">&#x3C;</span><span style=\"color:#B8A965\">Layout</span><span style=\"color:#BD976A\"> title</span><span style=\"color:#666666\">=</span><span style=\"color:#C98A7D77\">\"</span><span style=\"color:#C98A7D\">Blog</span><span style=\"color:#C98A7D77\">\"</span><span style=\"color:#BD976A\"> canonical</span><span style=\"color:#666666\">={</span><span style=\"color:#BD976A\">canonical</span><span style=\"color:#666666\">}></span></span>\n<span class=\"line\"><span style=\"color:#DBD7CAEE\">.</span></span>\n<span class=\"line\"><span style=\"color:#DBD7CAEE\">.</span></span>\n<span class=\"line\"><span style=\"color:#DBD7CAEE\">.</span></span>\n<span class=\"line\"><span style=\"color:#666666\">&#x3C;/</span><span style=\"color:#B8A965\">Layout</span><span style=\"color:#666666\">></span></span>\n<span class=\"line\"></span></code></pre>\n<p>And there I added my page component let’s talk about it in the getStaticPaths constant that we need to export we receive as a param the paginate method we can destroy the params to obtain it like this:</p>\n<pre class=\"astro-code vitesse-dark\" style=\"background-color:#121212;color:#dbd7caee; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"astro\"><code><span class=\"line\"><span style=\"color:#758575DD\">---</span></span>\n<span class=\"line\"><span style=\"color:#4D9375\">export</span><span style=\"color:#CB7676\"> const </span><span style=\"color:#80A665\">getStaticPaths</span><span style=\"color:#666666\">:</span><span style=\"color:#5DA994\">GetStaticPaths</span><span style=\"color:#666666\">=</span><span style=\"color:#CB7676\">async</span><span style=\"color:#666666\">({</span><span style=\"color:#BD976A\">paginate</span><span style=\"color:#666666\">})</span><span style=\"color:#666666\"> =>{</span></span>\n<span class=\"line\"><span style=\"color:#CB7676\">    const </span><span style=\"color:#BD976A\">publishedNotesEntries</span><span style=\"color:#666666\"> =</span><span style=\"color:#4D9375\"> await</span><span style=\"color:#80A665\"> getCollection</span><span style=\"color:#666666\">(</span><span style=\"color:#C98A7D77\">\"</span><span style=\"color:#C98A7D\">blog</span><span style=\"color:#C98A7D77\">\"</span><span style=\"color:#666666\">,</span><span style=\"color:#666666\"> ({</span><span style=\"color:#BD976A\"> data</span><span style=\"color:#666666\"> })</span><span style=\"color:#666666\"> =></span><span style=\"color:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"color:#758575DD\">      //filter draft props true and published in the future</span></span>\n<span class=\"line\"><span style=\"color:#4D9375\">        return</span><span style=\"color:#CB7676\"> !</span><span style=\"color:#BD976A\">data</span><span style=\"color:#666666\">.</span><span style=\"color:#BD976A\">draft</span><span style=\"color:#CB7676\"> &#x26;&#x26; </span><span style=\"color:#BD976A\">data</span><span style=\"color:#666666\">.</span><span style=\"color:#BD976A\">publishDate</span><span style=\"color:#666666\"> &#x3C;</span><span style=\"color:#CB7676\"> new </span><span style=\"color:#80A665\">Date</span><span style=\"color:#666666\">();</span></span>\n<span class=\"line\"><span style=\"color:#666666\">    });</span></span>\n<span class=\"line\"><span style=\"color:#758575DD\">    //sort entries</span></span>\n<span class=\"line\"><span style=\"color:#BD976A\">    publishedNotesEntries</span><span style=\"color:#666666\">.</span><span style=\"color:#80A665\">sort</span><span style=\"color:#666666\">(</span><span style=\"color:#CB7676\">function </span><span style=\"color:#666666\">(</span><span style=\"color:#BD976A\">a</span><span style=\"color:#666666\">,</span><span style=\"color:#BD976A\"> b</span><span style=\"color:#666666\">)</span><span style=\"color:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"color:#4D9375\">        return</span><span style=\"color:#BD976A\"> b</span><span style=\"color:#666666\">.</span><span style=\"color:#BD976A\">data</span><span style=\"color:#666666\">.</span><span style=\"color:#BD976A\">publishDate</span><span style=\"color:#666666\">.</span><span style=\"color:#80A665\">valueOf</span><span style=\"color:#666666\">()</span><span style=\"color:#CB7676\"> - </span><span style=\"color:#BD976A\">a</span><span style=\"color:#666666\">.</span><span style=\"color:#BD976A\">data</span><span style=\"color:#666666\">.</span><span style=\"color:#BD976A\">publishDate</span><span style=\"color:#666666\">.</span><span style=\"color:#80A665\">valueOf</span><span style=\"color:#666666\">();</span></span>\n<span class=\"line\"><span style=\"color:#666666\">    });</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#4D9375\">    return</span><span style=\"color:#80A665\"> paginate</span><span style=\"color:#666666\">(</span><span style=\"color:#BD976A\">publishedNotesEntries</span><span style=\"color:#666666\">,</span><span style=\"color:#666666\"> {</span><span style=\"color:#B8A965\">pageSize</span><span style=\"color:#666666\">:</span><span style=\"color:#4C9A91\">4</span><span style=\"color:#666666\">});</span></span>\n<span class=\"line\"><span style=\"color:#666666\">}</span></span>\n<span class=\"line\"><span style=\"color:#666666\">.</span></span>\n<span class=\"line\"><span style=\"color:#666666\">.</span></span>\n<span class=\"line\"><span style=\"color:#666666\">.</span></span>\n<span class=\"line\"><span style=\"color:#758575DD\">---</span></span>\n<span class=\"line\"></span></code></pre>\n<p>This technique now exposes the page data from astro props like this</p>\n<pre class=\"astro-code vitesse-dark\" style=\"background-color:#121212;color:#dbd7caee; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"astro\"><code><span class=\"line\"><span style=\"color:#758575DD\">---</span></span>\n<span class=\"line\"><span style=\"color:#666666\">.</span></span>\n<span class=\"line\"><span style=\"color:#666666\">.</span></span>\n<span class=\"line\"><span style=\"color:#666666\">.</span></span>\n<span class=\"line\"><span style=\"color:#CB7676\">type</span><span style=\"color:#5DA994\"> Props</span><span style=\"color:#666666\"> =</span><span style=\"color:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"color:#BD976A\">  page</span><span style=\"color:#666666\">: </span><span style=\"color:#5DA994\">Page</span><span style=\"color:#666666\">&#x3C;</span><span style=\"color:#5DA994\">CollectionEntry</span><span style=\"color:#666666\">&#x3C;</span><span style=\"color:#C98A7D77\">'</span><span style=\"color:#C98A7D\">notes</span><span style=\"color:#C98A7D77\">'</span><span style=\"color:#666666\">>>;</span></span>\n<span class=\"line\"><span style=\"color:#666666\">};</span></span>\n<span class=\"line\"><span style=\"color:#CB7676\">const </span><span style=\"color:#666666\">{</span><span style=\"color:#BD976A\"> page</span><span style=\"color:#666666\"> }</span><span style=\"color:#666666\"> =</span><span style=\"color:#BD976A\"> Astro</span><span style=\"color:#666666\">.</span><span style=\"color:#BD976A\">props</span><span style=\"color:#666666\">;</span></span>\n<span class=\"line\"><span style=\"color:#CB7676\">let </span><span style=\"color:#BD976A\">canonical</span></span>\n<span class=\"line\"><span style=\"color:#4D9375\">if</span><span style=\"color:#666666\"> (</span><span style=\"color:#BD976A\">page</span><span style=\"color:#666666\">.</span><span style=\"color:#BD976A\">currentPage</span><span style=\"color:#CB7676\">===</span><span style=\"color:#4C9A91\">1</span><span style=\"color:#666666\">){</span></span>\n<span class=\"line\"><span style=\"color:#BD976A\">    canonical</span><span style=\"color:#666666\">=</span><span style=\"color:#C98A7D77\">`</span><span style=\"color:#C98A7D\">/notebook/</span><span style=\"color:#C98A7D77\">`</span><span style=\"color:#666666\">;</span></span>\n<span class=\"line\"><span style=\"color:#666666\">}</span></span>\n<span class=\"line\"><span style=\"color:#758575DD\">---</span></span>\n<span class=\"line\"></span></code></pre>\n<p>And then we can make our paginator component that will receive these pages and render the specific page post we use page.data the Page will result in a component with this interface.</p>\n<pre class=\"astro-code vitesse-dark\" style=\"background-color:#121212;color:#dbd7caee; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"ts\"><code><span class=\"line\"><span style=\"color:#CB7676\">interface</span><span style=\"color:#5DA994\"> Page</span><span style=\"color:#666666\">{</span></span>\n<span class=\"line\"><span style=\"color:#BD976A\"> data</span><span style=\"color:#666666\">: </span><span style=\"color:#5DA994\">T</span><span style=\"color:#666666\">[];</span></span>\n<span class=\"line\"><span style=\"color:#758575DD\">    /** metadata */</span></span>\n<span class=\"line\"><span style=\"color:#758575DD\">    /** the count of the first item on the page, starting from 0 */</span></span>\n<span class=\"line\"><span style=\"color:#BD976A\">    start</span><span style=\"color:#666666\">: </span><span style=\"color:#5DA994\">number</span><span style=\"color:#666666\">;</span></span>\n<span class=\"line\"><span style=\"color:#758575DD\">    /** the count of the last item on the page, starting from 0 */</span></span>\n<span class=\"line\"><span style=\"color:#BD976A\">    end</span><span style=\"color:#666666\">: </span><span style=\"color:#5DA994\">number</span><span style=\"color:#666666\">;</span></span>\n<span class=\"line\"><span style=\"color:#758575DD\">    /** total number of results */</span></span>\n<span class=\"line\"><span style=\"color:#BD976A\">    total</span><span style=\"color:#666666\">: </span><span style=\"color:#5DA994\">number</span><span style=\"color:#666666\">;</span></span>\n<span class=\"line\"><span style=\"color:#758575DD\">    /** the current page number, starting from 1 */</span></span>\n<span class=\"line\"><span style=\"color:#BD976A\">    currentPage</span><span style=\"color:#666666\">: </span><span style=\"color:#5DA994\">number</span><span style=\"color:#666666\">;</span></span>\n<span class=\"line\"><span style=\"color:#758575DD\">    /** number of items per page (default: 25) */</span></span>\n<span class=\"line\"><span style=\"color:#BD976A\">    size</span><span style=\"color:#666666\">: </span><span style=\"color:#5DA994\">number</span><span style=\"color:#666666\">;</span></span>\n<span class=\"line\"><span style=\"color:#758575DD\">    /** number of last page */</span></span>\n<span class=\"line\"><span style=\"color:#BD976A\">    lastPage</span><span style=\"color:#666666\">: </span><span style=\"color:#5DA994\">number</span><span style=\"color:#666666\">;</span></span>\n<span class=\"line\"><span style=\"color:#BD976A\">    url</span><span style=\"color:#666666\">: {</span></span>\n<span class=\"line\"><span style=\"color:#758575DD\">        /** url of the current page */</span></span>\n<span class=\"line\"><span style=\"color:#BD976A\">        current</span><span style=\"color:#666666\">: </span><span style=\"color:#5DA994\">string</span><span style=\"color:#666666\">;</span></span>\n<span class=\"line\"><span style=\"color:#758575DD\">        /** url of the previous page (if there is one) */</span></span>\n<span class=\"line\"><span style=\"color:#BD976A\">        prev</span><span style=\"color:#666666\">: </span><span style=\"color:#5DA994\">string</span><span style=\"color:#666666\"> | </span><span style=\"color:#CB7676\">undefined</span><span style=\"color:#666666\">;</span></span>\n<span class=\"line\"><span style=\"color:#758575DD\">        /** url of the next page (if there is one) */</span></span>\n<span class=\"line\"><span style=\"color:#BD976A\">        next</span><span style=\"color:#666666\">: </span><span style=\"color:#5DA994\">string</span><span style=\"color:#666666\"> | </span><span style=\"color:#CB7676\">undefined</span><span style=\"color:#666666\">;</span></span>\n<span class=\"line\"><span style=\"color:#666666\">    };</span></span>\n<span class=\"line\"><span style=\"color:#666666\">}</span></span>\n<span class=\"line\"></span></code></pre>\n<p>Then from the data we get the data collection to show, start is the number of indexes of the first post on the page end of the last one, the total is the total numbers in the collection, currentPage is the actual page, size is the items Per page or pageSize that we pass to the first method, lastPage is the number of the last page important for the paginator element and URL are actual previous and next.</p>\n<p>Then we can use a paginator component like this:</p>\n<pre class=\"astro-code vitesse-dark\" style=\"background-color:#121212;color:#dbd7caee; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"astro\"><code><span class=\"line\"><span style=\"color:#758575DD\">---</span></span>\n<span class=\"line\"><span style=\"color:#4D9375\">import</span><span style=\"color:#BD976A\"> Link</span><span style=\"color:#4D9375\"> from</span><span style=\"color:#C98A7D77\"> \"</span><span style=\"color:#C98A7D\">@components/ui/link.astro</span><span style=\"color:#C98A7D77\">\"</span><span style=\"color:#666666\">;</span></span>\n<span class=\"line\"><span style=\"color:#4D9375\">import</span><span style=\"color:#4D9375\"> type</span><span style=\"color:#666666\"> {</span><span style=\"color:#BD976A\"> Page</span><span style=\"color:#666666\"> }</span><span style=\"color:#4D9375\"> from</span><span style=\"color:#C98A7D77\"> \"</span><span style=\"color:#C98A7D\">astro</span><span style=\"color:#C98A7D77\">\"</span><span style=\"color:#666666\">;</span></span>\n<span class=\"line\"><span style=\"color:#4D9375\">import</span><span style=\"color:#666666\"> {</span><span style=\"color:#BD976A\"> Icon</span><span style=\"color:#666666\"> }</span><span style=\"color:#4D9375\"> from</span><span style=\"color:#C98A7D77\"> \"</span><span style=\"color:#C98A7D\">astro-icon/components</span><span style=\"color:#C98A7D77\">\"</span><span style=\"color:#666666\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#CB7676\">interface</span><span style=\"color:#5DA994\"> Props</span><span style=\"color:#666666\">{</span></span>\n<span class=\"line\"><span style=\"color:#BD976A\">    page</span><span style=\"color:#666666\">:</span><span style=\"color:#5DA994\">Page</span></span>\n<span class=\"line\"><span style=\"color:#666666\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#CB7676\">const </span><span style=\"color:#666666\">{</span><span style=\"color:#BD976A\">page</span><span style=\"color:#666666\">}=</span><span style=\"color:#BD976A\">Astro</span><span style=\"color:#666666\">.</span><span style=\"color:#BD976A\">props</span><span style=\"color:#666666\">;</span></span>\n<span class=\"line\"><span style=\"color:#CB7676\">const </span><span style=\"color:#BD976A\">totalPages</span><span style=\"color:#666666\">=</span><span style=\"color:#BD976A\">Math</span><span style=\"color:#666666\">.</span><span style=\"color:#80A665\">ceil</span><span style=\"color:#666666\">(</span><span style=\"color:#BD976A\">page</span><span style=\"color:#666666\">.</span><span style=\"color:#BD976A\">total</span><span style=\"color:#CB7676\">/</span><span style=\"color:#BD976A\">page</span><span style=\"color:#666666\">.</span><span style=\"color:#BD976A\">size</span><span style=\"color:#666666\">);</span></span>\n<span class=\"line\"><span style=\"color:#CB7676\">const </span><span style=\"color:#BD976A\">pagesArray</span><span style=\"color:#666666\"> =</span><span style=\"color:#BD976A\"> Array</span><span style=\"color:#666666\">.</span><span style=\"color:#80A665\">from</span><span style=\"color:#666666\">({ </span><span style=\"color:#B8A965\">length</span><span style=\"color:#666666\">: </span><span style=\"color:#BD976A\">totalPages</span><span style=\"color:#666666\"> },</span><span style=\"color:#666666\"> (</span><span style=\"color:#BD976A\">_</span><span style=\"color:#666666\">,</span><span style=\"color:#BD976A\"> i</span><span style=\"color:#666666\">)</span><span style=\"color:#666666\"> =></span><span style=\"color:#BD976A\"> i</span><span style=\"color:#CB7676\"> + </span><span style=\"color:#4C9A91\">1</span><span style=\"color:#666666\">);</span></span>\n<span class=\"line\"><span style=\"color:#758575DD\">---</span></span>\n<span class=\"line\"><span style=\"color:#666666\">&#x3C;</span><span style=\"color:#4D9375\">hr</span><span style=\"color:#BD976A\"> class</span><span style=\"color:#666666\">=</span><span style=\"color:#C98A7D77\">\"</span><span style=\"color:#C98A7D\">mt-4</span><span style=\"color:#C98A7D77\">\"</span><span style=\"color:#666666\">></span></span>\n<span class=\"line\"><span style=\"color:#666666\">&#x3C;</span><span style=\"color:#4D9375\">section</span><span style=\"color:#BD976A\"> class</span><span style=\"color:#666666\">=</span><span style=\"color:#C98A7D77\">\"</span><span style=\"color:#C98A7D\">grid grid-cols-3 py-3</span><span style=\"color:#C98A7D77\">\"</span><span style=\"color:#666666\">></span></span>\n<span class=\"line\"><span style=\"color:#666666\">    &#x3C;</span><span style=\"color:#4D9375\">div</span><span style=\"color:#BD976A\"> class</span><span style=\"color:#666666\">=</span><span style=\"color:#C98A7D77\">\"</span><span style=\"color:#C98A7D\">flex justify-start</span><span style=\"color:#C98A7D77\">\"</span><span style=\"color:#666666\">></span></span>\n<span class=\"line\"><span style=\"color:#666666\">        {</span></span>\n<span class=\"line\"><span style=\"color:#BD976A\">            page</span><span style=\"color:#666666\">.</span><span style=\"color:#BD976A\">url</span><span style=\"color:#666666\">.</span><span style=\"color:#BD976A\">prev</span><span style=\"color:#CB7676\"> &#x26;&#x26;</span></span>\n<span class=\"line\"><span style=\"color:#666666\">            &#x3C;</span><span style=\"color:#B8A965\">Link</span></span>\n<span class=\"line\"><span style=\"color:#BD976A\">            size</span><span style=\"color:#666666\">=</span><span style=\"color:#C98A7D77\">\"</span><span style=\"color:#C98A7D\">md</span><span style=\"color:#C98A7D77\">\"</span></span>\n<span class=\"line\"><span style=\"color:#BD976A\">            href</span><span style=\"color:#666666\">={</span><span style=\"color:#BD976A\">page</span><span style=\"color:#666666\">.</span><span style=\"color:#BD976A\">url</span><span style=\"color:#666666\">.</span><span style=\"color:#BD976A\">prev</span><span style=\"color:#666666\">}</span></span>\n<span class=\"line\"><span style=\"color:#BD976A\">            style</span><span style=\"color:#666666\">=</span><span style=\"color:#C98A7D77\">\"</span><span style=\"color:#C98A7D\">inverted</span><span style=\"color:#C98A7D77\">\"</span></span>\n<span class=\"line\"><span style=\"color:#BD976A\">            class</span><span style=\"color:#666666\">=</span><span style=\"color:#C98A7D77\">\"</span><span style=\"color:#C98A7D\">flex gap place-items-center hover:bg-slate-600 py-3 px-4 group</span><span style=\"color:#C98A7D77\">\"</span><span style=\"color:#666666\">></span></span>\n<span class=\"line\"><span style=\"color:#DBD7CAEE\">            &#x3C;-</span></span>\n<span class=\"line\"><span style=\"color:#666666\">        &#x3C;/</span><span style=\"color:#B8A965\">Link</span><span style=\"color:#666666\">></span></span>\n<span class=\"line\"><span style=\"color:#666666\">    }</span></span>\n<span class=\"line\"><span style=\"color:#666666\">&#x3C;/</span><span style=\"color:#4D9375\">div</span><span style=\"color:#666666\">></span></span>\n<span class=\"line\"><span style=\"color:#666666\">&#x3C;</span><span style=\"color:#4D9375\">div</span><span style=\"color:#BD976A\"> class</span><span style=\"color:#666666\">=</span><span style=\"color:#C98A7D77\">\"</span><span style=\"color:#C98A7D\">flex justify-center</span><span style=\"color:#C98A7D77\">\"</span><span style=\"color:#666666\">></span></span>\n<span class=\"line\"><span style=\"color:#666666\">    {</span><span style=\"color:#BD976A\">pagesArray</span><span style=\"color:#666666\">.</span><span style=\"color:#80A665\">map</span><span style=\"color:#666666\">(</span><span style=\"color:#BD976A\">pageX</span><span style=\"color:#666666\">=>{</span></span>\n<span class=\"line\"><span style=\"color:#4D9375\">        return</span><span style=\"color:#666666\">(</span></span>\n<span class=\"line\"><span style=\"color:#666666\">            &#x3C;</span><span style=\"color:#B8A965\">Link</span></span>\n<span class=\"line\"><span style=\"color:#BD976A\">            size</span><span style=\"color:#666666\">=</span><span style=\"color:#C98A7D77\">\"</span><span style=\"color:#C98A7D\">md</span><span style=\"color:#C98A7D77\">\"</span></span>\n<span class=\"line\"><span style=\"color:#BD976A\">            href</span><span style=\"color:#666666\">={</span><span style=\"color:#C98A7D77\">`</span><span style=\"color:#C98A7D\">/notebook/</span><span style=\"color:#4D9375\">${</span><span style=\"color:#C98A7D\">pageX</span><span style=\"color:#4D9375\">}</span><span style=\"color:#C98A7D77\">`</span><span style=\"color:#666666\">}</span></span>\n<span class=\"line\"><span style=\"color:#BD976A\">            style</span><span style=\"color:#666666\">=</span><span style=\"color:#C98A7D77\">\"</span><span style=\"color:#C98A7D\">pages</span><span style=\"color:#C98A7D77\">\"</span></span>\n<span class=\"line\"><span style=\"color:#BD976A\">            class</span><span style=\"color:#666666\">:</span><span style=\"color:#BD976A\">list</span><span style=\"color:#666666\">={[{</span><span style=\"color:#C98A7D77\">'</span><span style=\"color:#C98A7D\">bg-slate-600 text-white</span><span style=\"color:#C98A7D77\">'</span><span style=\"color:#666666\">:</span><span style=\"color:#BD976A\">pageX</span><span style=\"color:#CB7676\">===</span><span style=\"color:#BD976A\">page</span><span style=\"color:#666666\">.</span><span style=\"color:#BD976A\">currentPage</span><span style=\"color:#666666\">}]}</span></span>\n<span class=\"line\"><span style=\"color:#BD976A\">            class</span><span style=\"color:#666666\">=</span><span style=\"color:#C98A7D77\">\"</span><span style=\"color:#C98A7D\">flex gap place-items-center</span><span style=\"color:#C98A7D77\">\"</span><span style=\"color:#666666\">></span></span>\n<span class=\"line\"><span style=\"color:#666666\">            {</span><span style=\"color:#BD976A\">pageX</span><span style=\"color:#666666\">}</span></span>\n<span class=\"line\"><span style=\"color:#DBD7CAEE\">            </span></span>\n<span class=\"line\"><span style=\"color:#666666\">        &#x3C;/</span><span style=\"color:#B8A965\">Link</span><span style=\"color:#666666\">></span></span>\n<span class=\"line\"><span style=\"color:#666666\">    )</span></span>\n<span class=\"line\"><span style=\"color:#666666\">    })}</span></span>\n<span class=\"line\"><span style=\"color:#666666\">&#x3C;/</span><span style=\"color:#4D9375\">div</span><span style=\"color:#666666\">></span></span>\n<span class=\"line\"><span style=\"color:#666666\">&#x3C;</span><span style=\"color:#4D9375\">div</span><span style=\"color:#BD976A\"> class</span><span style=\"color:#666666\">=</span><span style=\"color:#C98A7D77\">\"</span><span style=\"color:#C98A7D\">flex justify-end</span><span style=\"color:#C98A7D77\">\"</span><span style=\"color:#666666\">></span></span>\n<span class=\"line\"><span style=\"color:#666666\">    {</span></span>\n<span class=\"line\"><span style=\"color:#BD976A\">        page</span><span style=\"color:#666666\">.</span><span style=\"color:#BD976A\">url</span><span style=\"color:#666666\">.</span><span style=\"color:#BD976A\">next</span><span style=\"color:#CB7676\"> &#x26;&#x26;</span></span>\n<span class=\"line\"><span style=\"color:#666666\">        &#x3C;</span><span style=\"color:#B8A965\">Link</span></span>\n<span class=\"line\"><span style=\"color:#BD976A\">        size</span><span style=\"color:#666666\">=</span><span style=\"color:#C98A7D77\">\"</span><span style=\"color:#C98A7D\">md</span><span style=\"color:#C98A7D77\">\"</span></span>\n<span class=\"line\"><span style=\"color:#BD976A\">        href</span><span style=\"color:#666666\">={</span><span style=\"color:#BD976A\">page</span><span style=\"color:#666666\">.</span><span style=\"color:#BD976A\">url</span><span style=\"color:#666666\">.</span><span style=\"color:#BD976A\">next</span><span style=\"color:#666666\">}</span></span>\n<span class=\"line\"><span style=\"color:#BD976A\">        style</span><span style=\"color:#666666\">=</span><span style=\"color:#C98A7D77\">\"</span><span style=\"color:#C98A7D\">inverted</span><span style=\"color:#C98A7D77\">\"</span></span>\n<span class=\"line\"><span style=\"color:#DBD7CAEE\">        </span></span>\n<span class=\"line\"><span style=\"color:#BD976A\">        class</span><span style=\"color:#666666\">=</span><span style=\"color:#C98A7D77\">\"</span><span style=\"color:#C98A7D\">flex gap place-items-center hover:bg-slate-600 py-3 px-4 group</span><span style=\"color:#C98A7D77\">\"</span><span style=\"color:#666666\">></span></span>\n<span class=\"line\"><span style=\"color:#DBD7CAEE\">        -></span></span>\n<span class=\"line\"><span style=\"color:#666666\">    &#x3C;/</span><span style=\"color:#B8A965\">Link</span><span style=\"color:#666666\">></span></span>\n<span class=\"line\"><span style=\"color:#666666\">}</span></span>\n<span class=\"line\"><span style=\"color:#666666\">&#x3C;/</span><span style=\"color:#4D9375\">div</span><span style=\"color:#666666\">></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#666666\">&#x3C;/</span><span style=\"color:#4D9375\">section</span><span style=\"color:#666666\">></span></span>\n<span class=\"line\"></span></code></pre>\n<p>This component is stylized with tailwind.css but you can create your one.</p>\n<p>Thanks, thats all as always if you think that can help to make this post better or detect a bad practice please notify me in the contact form and I will be in touch with you to fix it.</p>";

				const frontmatter = {"draft":false,"selfHealing":"000007","title":"Paginator in astro","resume":"Paginate a website in Astro or any other framework like next.js or nuxt is a challenge but not because is difficult to implement but because is difficult to understand, in this post i will try to illustrate how the paginator of this website was made.","image":{"src":"paginator","alt":"Full pages with an indiator"},"publishDate":"2024-05-21 09:45","category":"Development","author":"jorge-saud","tags":["astro","next","nuxt","frontent","backend"]};
				const file = "/Users/giorgiosaud/Projects/personal/giorgiosaud.io/src/content/notes/paginator-in-astro.md";
				const url = undefined;
				function rawContent() {
					return "\n# Basis of Pagination\n\nAstro like many other frameworks has a pagination system based on repeatable content, this content should belong to a single repository, Astro has collections, the collections are files written in .md and stored in the filesystem that can be processed internally by Astro, this allows to use in the build process some techniques to generate in 3 ways the website, we can configure the output as **static** where the build will generate all the static paths **server** where the build process will generate a server which processes all request supporting SSR (server-side rendering) or **hybrid** where some elements are statics and other are SSR ones.\n\n```bash\nsrc/\n  ├── content/\n  │   ├── blog/\n  │   │   └── blognote-1.md\n  │   │   └── blognote-2.md\n  │   └── config.ts\n  .\n  .\n  .\n  ├── layouts/\n  │   └── Layout.astro\n  ├── pages/\n  │   └── blog/\n  │       └── [slug].astro\n  │   └── index.astro\n  │   └── blog.astro\n  .\n  .\n  .\n```\n\nIn this structure, the blog can show the 2 blog notes of the content but when the blog grows not only the build process will take more time but the /blog path also renders more content than a normal page increasing the loading time of the final rendered site, then we think about pagination, we can add a paginator in the blog, but pagination in this page is almost impossible because this page is rendered with the ```getCollection``` function but for pagination purposes we need to use the ```getStaticPaths``` method, this is because this method is the one that generates dynamic routes to match the brackets syntax in the routing, then we need to separate this index page in 2 pages one that should be shown in the /blog and another that takes care of pages, and move the blog.astro to the blog file structure to allow us to manage all related blog issues inside of this folder, when we move it we need to rename to index.astro because the folder name is the route that we want.\n\n```bash\nsrc/\n  ├── content/\n  │   ├── blog/\n  │   │   └── blognote-1.md\n  │   │   └── blognote-2.md\n  │   │   .\n  │   │   .\n  │   │   .\n  │   │   └── blognote-31.md\n  │   │   └── blognote-32.md\n  │   └── config.ts\n  .\n  .\n  .\n  ├── layouts/\n  │   └── Layout.astro\n  ├── pages/\n  │   └── blog/\n  │       └── [slug].astro\n  │       └── [page].astro\n  │       └── index.astro\n  │   └── index.astro\n  .\n  .\n  .\n```\n\nWith this file structure now have all related blog pages in one place, and I choose to use one index and another page that takes care of the paginated ones all but page 1, that`s because if I use the same page for pagination or show the main show to avoid duplication will be /1 now I can handle this and make /1 canonical of /blog and in my index.astro inside the blog folder only shows one arrow to see the previous post that will move to /2 page of / blog like this ```blog/2```\n\nTo handle this canonical between ```blog/1```and ```blog``` I add a canonical property to my ```Layout.astro``` page  and in the head I add to the head this:\n\n```astro \n  {canonical&&<link rel=\"canonical\" href={canonical} />}\n```\nthen in the frontmatter part i delcared canonical as a Astr.prop and make it optional, then in the [page].astro i used it as.\n\n```astro\n<Layout title=\"Blog\" canonical={canonical}>\n.\n.\n.\n</Layout>\n```\n\nAnd there I added my page component let's talk about it in the getStaticPaths constant that we need to export we receive as a param the paginate method we can destroy the params to obtain it like this:\n\n```astro\n---\nexport const getStaticPaths:GetStaticPaths=async({paginate}) =>{\n    const publishedNotesEntries = await getCollection(\"blog\", ({ data }) => {\n      //filter draft props true and published in the future\n        return !data.draft && data.publishDate < new Date();\n    });\n    //sort entries\n    publishedNotesEntries.sort(function (a, b) {\n        return b.data.publishDate.valueOf() - a.data.publishDate.valueOf();\n    });\n\n    return paginate(publishedNotesEntries, {pageSize:4});\n}\n.\n.\n.\n---\n```\n\nThis technique now exposes the page data from astro props like this\n\n```astro\n---\n.\n.\n.\ntype Props = {\n  page: Page<CollectionEntry<'notes'>>;\n};\nconst { page } = Astro.props;\nlet canonical\nif (page.currentPage===1){\n    canonical=`/notebook/`;\n}\n---\n```\n\nAnd then we can make our paginator component that will receive these pages and render the specific page post we use page.data the Page will result in a component with this interface.\n\n```ts\ninterface Page{\n data: T[];\n    /** metadata */\n    /** the count of the first item on the page, starting from 0 */\n    start: number;\n    /** the count of the last item on the page, starting from 0 */\n    end: number;\n    /** total number of results */\n    total: number;\n    /** the current page number, starting from 1 */\n    currentPage: number;\n    /** number of items per page (default: 25) */\n    size: number;\n    /** number of last page */\n    lastPage: number;\n    url: {\n        /** url of the current page */\n        current: string;\n        /** url of the previous page (if there is one) */\n        prev: string | undefined;\n        /** url of the next page (if there is one) */\n        next: string | undefined;\n    };\n}\n``` \n\nThen from the data we get the data collection to show, start is the number of indexes of the first post on the page end of the last one, the total is the total numbers in the collection, currentPage is the actual page, size is the items Per page or pageSize that we pass to the first method, lastPage is the number of the last page important for the paginator element and URL are actual previous and next.\n\nThen we can use a paginator component like this:\n\n```astro\n---\nimport Link from \"@components/ui/link.astro\";\nimport type { Page } from \"astro\";\nimport { Icon } from \"astro-icon/components\";\n\ninterface Props{\n    page:Page\n}\n\nconst {page}=Astro.props;\nconst totalPages=Math.ceil(page.total/page.size);\nconst pagesArray = Array.from({ length: totalPages }, (_, i) => i + 1);\n---\n<hr class=\"mt-4\">\n<section class=\"grid grid-cols-3 py-3\">\n    <div class=\"flex justify-start\">\n        {\n            page.url.prev &&\n            <Link\n            size=\"md\"\n            href={page.url.prev}\n            style=\"inverted\"\n            class=\"flex gap place-items-center hover:bg-slate-600 py-3 px-4 group\">\n            <-\n        </Link>\n    }\n</div>\n<div class=\"flex justify-center\">\n    {pagesArray.map(pageX=>{\n        return(\n            <Link\n            size=\"md\"\n            href={`/notebook/${pageX}`}\n            style=\"pages\"\n            class:list={[{'bg-slate-600 text-white':pageX===page.currentPage}]}\n            class=\"flex gap place-items-center\">\n            {pageX}\n            \n        </Link>\n    )\n    })}\n</div>\n<div class=\"flex justify-end\">\n    {\n        page.url.next &&\n        <Link\n        size=\"md\"\n        href={page.url.next}\n        style=\"inverted\"\n        \n        class=\"flex gap place-items-center hover:bg-slate-600 py-3 px-4 group\">\n        ->\n    </Link>\n}\n</div>\n\n</section>\n```\n\nThis component is stylized with tailwind.css but you can create your one.\n\nThanks, thats all as always if you think that can help to make this post better or detect a bad practice please notify me in the contact form and I will be in touch with you to fix it.\n";
				}
				function compiledContent() {
					return html;
				}
				function getHeadings() {
					return [{"depth":1,"slug":"basis-of-pagination","text":"Basis of Pagination"}];
				}

				const Content = createComponent((result, _props, slots) => {
					const { layout, ...content } = frontmatter;
					content.file = file;
					content.url = url;

					return renderTemplate`${maybeRenderHead()}${unescapeHTML(html)}`;
				});

export { Content, compiledContent, Content as default, file, frontmatter, getHeadings, rawContent, url };
