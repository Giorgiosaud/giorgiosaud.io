---
import Container from '@components/container.astro';
import Layout from '@layouts/Layout.astro';
import { actions } from 'astro:actions';
import { getAuth } from "firebase-admin/auth";
import { app } from "../firebase/server";

export const prerender = false
const result = Astro.getActionResult(actions.signin);
if (result && !result.error) {
  return Astro.redirect(`/signin`);
}
const auth = getAuth(app);
if (Astro.cookies.has("__session")) {
  const sessionCookie = Astro.cookies.get("__session")?.value;
  if(sessionCookie){
    const decodedCookie = await auth.verifySessionCookie(sessionCookie);
    
    if (decodedCookie) {
      return Astro.redirect("/dashboard");
    }
  }
}
---
<Layout title="Signin">
  <Container>
    {result?.error && (
      <p class="error">Unable to signin. Please try again later.</p>
      )}
      <div class="text-center py-4">
        <h1 class="text-5xl font-bold">Signin</h1>
        <small class="font-xxs">Already have an account? <a href="/signin">Sign in</a></small> 
      </div>
      <form action={actions.signin} method="post" class="max-w-md mx-auto">
        <div class="relative z-0 w-full mb-5 group">
          <div class="relative z-0 w-full mb-5 group">
            <input type="email" name="email" autocomplete="email" id="email" class="block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none  focus:outline-none focus:ring-0 focus:border-blue-600 peer" placeholder=" " required />
            <label for="email" class="peer-focus:font-medium absolute text-sm text-gray-500 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:start-0 rtl:peer-focus:translate-x-1/4 rtl:peer-focus:left-auto peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6">Email</label>
          </div>
          <div class="relative z-0 w-full mb-5 group">
            <input type="password" name="password" id="password" autocomplete="new_password" class="block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none  focus:outline-none focus:ring-0 focus:border-blue-600 peer" placeholder=" " required />
            <label for="password" class="peer-focus:font-medium absolute text-sm text-gray-500 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:start-0 rtl:peer-focus:translate-x-1/4 rtl:peer-focus:left-auto peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6">Password</label>
          </div>
          <button type="submit" class="text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm w-full sm:w-auto px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">Submit</button>
        </div>
      </form>
      
    </Container>
    <script>
      import { actions } from 'astro:actions';
      import { app } from "../firebase/client";
      import {
        getAuth,
        inMemoryPersistence,
        signInWithEmailAndPassword,
      } from "firebase/auth";
      const form=document.querySelector('form')||document.createElement('form');
      form.addEventListener('submit',async(e)=>{
        e.preventDefault();
        const formData = new FormData(form);
        const email = formData.get("email")?.toString();
        const password = formData.get("password")?.toString();
        if(!email||!password){
          return;
        }
        const auth = getAuth(app);
        
        const userCredential = await signInWithEmailAndPassword(
        auth,
        email,
        password
        );
        const idToken = await userCredential.user.getIdToken();
        try{
          const response = await fetch("/api/auth/signin", {
            method: "GET",
            headers: { Authorization: `Bearer ${idToken}` },
          });
          if(response.redirected){  
            window.location.assign(response.url)
          }
        }
        catch(e){
          console.error(e);
        }
        })
      
    </script>
  </Layout>
  